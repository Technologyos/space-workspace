<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.technologyos</groupId>
    <artifactId>space-workspace</artifactId>
    <packaging>pom</packaging>
    <name>space-workspace</name>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>business</module>
        <module>infrastructure</module>
    </modules>

    <properties>
       <maven.compiler.source>17</maven.compiler.source>
       <maven.compiler.target>17</maven.compiler.target>
       <spring-boot.version>3.0.4</spring-boot.version>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       <postgres.version>42.6.0</postgres.version>
       <java-validation.version>2.0.1.Final</java-validation.version>
       <dockerfile-maven-version>1.4.13</dockerfile-maven-version>
       <lombok.version>1.18.30</lombok.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter</artifactId>
       </dependency>

       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>
       </dependency>

       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-actuator</artifactId>
       </dependency>

       <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <version>${lombok.version}</version>
       </dependency>

       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
          <scope>test</scope>
          <!--If want exclude junit4 and use only junit5-->
          <exclusions>
             <exclusion>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
             </exclusion>
          </exclusions>
       </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--This plugin generate reports in two different ways .txt and xml
            in test phase when build life circle is execute -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

           <plugin>
              <groupId>com.spotify</groupId>
              <artifactId>dockerfile-maven-plugin</artifactId>
              <version>${dockerfile-maven-version}</version>
              <executions>
                 <execution>
                    <id>build-docker-image</id>
                    <phase>package</phase>
                    <goals>
                       <goal>build</goal>
                       <!--<goal>push</goal>-->
                    </goals>
                 </execution>
              </executions>
              <configuration>
                 <repository>spaceservice/microservice-docker-${project.artifactId}</repository>
                 <tag>${project.version}</tag>
                 <buildArgs>
                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                 </buildArgs>
              </configuration>
           </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.1</version>
                <configuration>
                    <locales>es,en</locales>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
        </plugins>
    </build>
</project>
